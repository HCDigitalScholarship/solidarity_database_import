# Generated by Django 2.0.5 on 2018-06-15 17:06

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0011_auto_20180606_1910'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(blank=True, max_length=150, null=True)),
                ('fax', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.CharField(blank=True, max_length=150, null=True)),
                ('uid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('fax', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('uid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lid', models.IntegerField(blank=True, null=True)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('primary_loc', models.CharField(blank=True, max_length=100, null=True)),
                ('location_name', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.TextField()),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('address2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('match_addr', models.CharField(blank=True, max_length=100, null=True)),
                ('side', models.CharField(blank=True, max_length=20, null=True)),
                ('ref_id', models.IntegerField(blank=True, null=True)),
                ('geographic_location', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'data_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('website', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('year_founded', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('ally', models.NullBooleanField()),
                ('defunct', models.NullBooleanField()),
                ('hide_from_site', models.NullBooleanField()),
                ('icon_group_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EssProductService',
            fields=[
                ('product_service_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ess_product_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EssProductServiceTopLevel',
            fields=[
                ('prefix_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ess_product_service_top_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeocodedSample',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
            ],
            options={
                'db_table': 'geocoded_sample',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeocodedSample1',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
            ],
            options={
                'db_table': 'geocoded_sample_1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IconGroups',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'icon_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IdsTest',
            fields=[
                ('id', models.TextField(blank=True, primary_key=True, serialize=False)),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('bid', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('branch_name', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ids_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IdsTest2',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('oid', models.IntegerField()),
                ('bid', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('branch_name', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ids_test_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IdsTesttest',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('oid', models.IntegerField()),
                ('bid', models.IntegerField()),
                ('hqname', models.TextField(blank=True, null=True)),
                ('branch_name', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ids_testtest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('lid', models.AutoField(primary_key=True, serialize=False)),
                ('primary_loc', models.NullBooleanField()),
                ('location_name', models.CharField(blank=True, max_length=150, null=True)),
                ('comments', models.CharField(blank=True, max_length=150, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('address2', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(blank=True, max_length=150, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=150, null=True)),
                ('county', models.CharField(blank=True, max_length=150, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('match_addr', models.CharField(blank=True, max_length=150, null=True)),
                ('side', models.CharField(blank=True, max_length=150, null=True)),
                ('ref_id', models.CharField(blank=True, max_length=150, null=True)),
                ('geographic_location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NaicsIndustries',
            fields=[
                ('naics_id', models.IntegerField(primary_key=True, serialize=False)),
                ('industry_name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
            ],
            options={
                'db_table': 'naics_industries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NaicsSectors',
            fields=[
                ('naics_sector_id', models.IntegerField(primary_key=True, serialize=False)),
                ('sector_name', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'naics_sectors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('oid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('website', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('source', models.CharField(blank=True, max_length=150, null=True)),
                ('year_founded', models.IntegerField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=150, null=True)),
                ('ally', models.NullBooleanField()),
                ('defunct', models.NullBooleanField()),
                ('hide_from_site', models.NullBooleanField()),
                ('icon_group_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'organizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PanelData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.TextField()),
                ('oid', models.IntegerField()),
                ('bid', models.IntegerField()),
                ('hqname', models.TextField()),
                ('branch_name', models.TextField()),
                ('comments', models.TextField()),
                ('type', models.CharField(blank=True, max_length=150, null=True)),
                ('first_name', models.TextField(blank=True, null=True)),
                ('lastname', models.TextField(blank=True, null=True)),
                ('contact_email', models.TextField(blank=True, null=True)),
                ('externaldatareference', models.TextField(blank=True, null=True)),
                ('address1', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('number_5digit_zip', models.DecimalField(blank=True, db_column='5digit_zip', decimal_places=65535, max_digits=65535, null=True)),
                ('number_4digit_zip_field', models.DecimalField(blank=True, db_column='4digit_zip ', decimal_places=65535, max_digits=65535, null=True)),
                ('phone', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'panel_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaOrgsChildcareTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('type_name', models.CharField(blank=True, max_length=150, null=True)),
                ('location_name', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('address2', models.CharField(blank=True, max_length=150, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(blank=True, max_length=150, null=True)),
                ('geographic_location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pa_orgs_childcare_tmp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaOrgsTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('type_name', models.CharField(blank=True, max_length=150, null=True)),
                ('location_name', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('address2', models.CharField(blank=True, max_length=150, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(blank=True, max_length=150, null=True)),
                ('geographic_location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pa_orgs_tmp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchemaMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'schema_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suggestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_organization_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('submitter_name', models.CharField(blank=True, max_length=255, null=True)),
                ('submitter_email', models.CharField(blank=True, max_length=255, null=True)),
                ('ally', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'suggestions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyMain',
            fields=[
                ('uid', models.TextField(primary_key=True, serialize=False)),
                ('oid', models.IntegerField()),
                ('bid', models.IntegerField()),
                ('id', models.IntegerField(blank=True, null=True)),
                ('surv_id', models.IntegerField(blank=True, null=True)),
                ('surv_section', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('surv_admin', models.CharField(blank=True, max_length=10, null=True)),
                ('surv_origin', models.CharField(blank=True, max_length=10, null=True)),
                ('v1', models.CharField(blank=True, max_length=20, null=True)),
                ('v5', models.CharField(blank=True, max_length=20, null=True)),
                ('v8', models.DateTimeField(blank=True, null=True)),
                ('v9', models.DateTimeField(blank=True, null=True)),
                ('v10', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q1_consent', models.NullBooleanField()),
                ('q2_name', models.CharField(blank=True, max_length=30, null=True)),
                ('q2_add1', models.CharField(blank=True, max_length=30, null=True)),
                ('q2_city', models.CharField(blank=True, max_length=15, null=True)),
                ('q2_state', models.CharField(blank=True, max_length=2, null=True)),
                ('q2_zip', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q2_phone', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q2_email', models.CharField(blank=True, max_length=20, null=True)),
                ('q2_web', models.CharField(blank=True, max_length=20, null=True)),
                ('q2_contact', models.CharField(blank=True, max_length=30, null=True)),
                ('q2_title', models.CharField(blank=True, max_length=10, null=True)),
                ('q2_phone2', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q2_email2', models.CharField(blank=True, max_length=20, null=True)),
                ('q2_add2', models.CharField(blank=True, max_length=30, null=True)),
                ('q2_add2_det', models.TextField(blank=True, null=True)),
                ('q2_add3', models.CharField(blank=True, max_length=30, null=True)),
                ('q2_add3_det', models.TextField(blank=True, null=True)),
                ('q3_consumer', models.NullBooleanField()),
                ('q3_buying', models.NullBooleanField()),
                ('q3_vollunteer_cons', models.NullBooleanField()),
                ('q3_housing', models.NullBooleanField()),
                ('q3_clt', models.NullBooleanField()),
                ('q3_1_6', models.NullBooleanField()),
                ('q3_worker', models.NullBooleanField()),
                ('q3_producer', models.NullBooleanField()),
                ('q3_volunteer_prod', models.NullBooleanField()),
                ('q3_garden', models.NullBooleanField()),
                ('q3_selfemployed', models.NullBooleanField()),
                ('q3_carework', models.NullBooleanField()),
                ('q3_cu', models.NullBooleanField()),
                ('q3_cdcu', models.NullBooleanField()),
                ('q3_lending', models.NullBooleanField()),
                ('q3_mutual', models.NullBooleanField()),
                ('q3_3_5', models.NullBooleanField()),
                ('q3_3_6', models.NullBooleanField()),
                ('q3_fair_trade', models.NullBooleanField()),
                ('q3_csa', models.NullBooleanField()),
                ('q3_currency', models.NullBooleanField()),
                ('q3_time_bank', models.NullBooleanField()),
                ('q3_barter', models.NullBooleanField()),
                ('q3_4_6', models.NullBooleanField()),
                ('q3_budgeting', models.NullBooleanField()),
                ('q3_resources', models.NullBooleanField()),
                ('q3_5_3', models.NullBooleanField()),
                ('q3_5_4', models.NullBooleanField()),
                ('q3_5_5', models.NullBooleanField()),
                ('q3_5_6', models.NullBooleanField()),
                ('q4_other', models.TextField(blank=True, null=True)),
                ('q5_product1', models.CharField(blank=True, max_length=20, null=True)),
                ('q5_product2', models.CharField(blank=True, max_length=20, null=True)),
                ('q5_product3', models.CharField(blank=True, max_length=20, null=True)),
                ('q6_input1', models.CharField(blank=True, max_length=20, null=True)),
                ('q6_input2', models.CharField(blank=True, max_length=20, null=True)),
                ('q6_input3', models.CharField(blank=True, max_length=20, null=True)),
                ('q7_sic_naics', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q7_description', models.TextField(blank=True, null=True)),
                ('q8_consent', models.NullBooleanField()),
                ('q9_established', models.SmallIntegerField(blank=True, null=True)),
                ('q10_type', models.DecimalField(blank=True, decimal_places=0, max_digits=1, null=True)),
                ('q10_type_other', models.TextField(blank=True, null=True)),
                ('q11_ownership', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q11_ownership_other', models.TextField(blank=True, null=True)),
                ('q12_nonmbrwrkrs', models.NullBooleanField()),
                ('q13_ind_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q13_mbr_orgs', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q14_payroll', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q15_inc_benefit', models.NullBooleanField()),
                ('q16_benefits', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q17_revenue', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q18_ftime_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q18_ptime_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q18_volunteer', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q19_hours', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q20_wrkr_residence', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q20_wrkr_residence_other', models.TextField(blank=True, null=True)),
                ('q21_black_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_black_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_white_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_white_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_latino_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_latino_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_asian_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_asian_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_other_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q21_other_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q22_black', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q22_white', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q22_latino', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q22_asian', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q22_other', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q23_women_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q23_women_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q23_lgbt_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q23_lgbt_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q23_disab_wrkr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q23_disab_mbr', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q24_women', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q24_lgbt', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q24_disab', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q25_area_served', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q25_area_served_other', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q26_input_area', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('q26_input_area_other', models.TextField(blank=True, null=True)),
                ('q27', models.NullBooleanField()),
                ('latitude', django.contrib.gis.db.models.fields.GeometryField(blank=True, dim=None, geography=True, null=True, srid=0)),
                ('longitude', django.contrib.gis.db.models.fields.GeometryField(blank=True, dim=None, geography=True, null=True, srid=0)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'survey_main',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(blank=True, null=True)),
                ('form', models.CharField(blank=True, max_length=150, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(blank=True, max_length=3, null=True)),
                ('zip', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'test1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n', models.CharField(blank=True, max_length=50, null=True)),
                ('v', models.CharField(blank=True, max_length=6, null=True)),
                ('a', models.CharField(blank=True, max_length=100, null=True)),
                ('b', models.CharField(blank=True, max_length=100, null=True)),
                ('c', models.CharField(blank=True, max_length=20, null=True)),
                ('s', models.CharField(blank=True, max_length=2, null=True)),
                ('z', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'test3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
            ],
            options={
                'db_table': 'types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('password_digest', models.CharField(blank=True, max_length=255, null=True)),
                ('password_reset_token', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='contact',
            name='oid',
        ),
        migrations.RemoveField(
            model_name='organization',
            name='oid',
        ),
        migrations.CreateModel(
            name='NaicsIndustryAsocOrg',
            fields=[
                ('oid', models.ForeignKey(db_column='oid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='data.Organizations')),
            ],
            options={
                'db_table': 'naics_industry_asoc_org',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrgAndTypeAssoc',
            fields=[
                ('oid', models.ForeignKey(db_column='oid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='data.Organizations')),
            ],
            options={
                'db_table': 'org_and_type_assoc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrgToEssProductInput',
            fields=[
                ('product_service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='data.EssProductService')),
            ],
            options={
                'db_table': 'org_to_ess_product_input',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrgToEssProductOutput',
            fields=[
                ('product_service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='data.EssProductService')),
            ],
            options={
                'db_table': 'org_to_ess_product_output',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Contact',
        ),
        migrations.DeleteModel(
            name='Location',
        ),
        migrations.DeleteModel(
            name='Organization',
        ),
    ]
